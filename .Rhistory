source("~/.active-rstudio-document", echo=TRUE)
boxplot(X_1999$Emissions)
X_2002 <- unique(subset(NEI, year == 2002, c(Emissions, year)))
head(X_2002)
boxplox(X_2002$Emissions)
boxplot(X_2002$Emissions)
boxplot(X_1999$Emissions, X_2002$Emissions)
boxplot(X_1999$Emissions, X_2002$Emissions, X_2005$Emissions, X_2008$Emissions)
X_2005 <- unique(subset(NEI, year == 2005, c(Emissions, year)))
X_2008 <- unique(subset(NEI, year == 2008, c(Emissions, year)))
boxplot(X_1999$Emissions, X_2002$Emissions, X_2005$Emissions, X_2008$Emissions)
boxplot(log10(X_1999$Emissions), log10(X_2002$Emissions), log10(X_2005$Emissions), log10(X_2008$Emissions))
png(filename,"trama1.png")
png(filename = "trama1.png")
boxplot(log10(X_1999$Emissions), log10(X_2002$Emissions), log10(X_2005$Emissions), log10(X_2008$Emissions))
dev.off()
library("data.table")
path <- getwd()
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
, destfile = paste(path, "dataFiles.zip", sep = "/"))
unzip(zipfile = "dataFiles.zip")
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
NEI <- readRDS("D:\\Data\\pm25\\exdata_data_NEI_data\\summarySCC_PM25.rds")
V
NEI <- readRDS("D:\\Data\\data\\pm25\\exdata_data_NEI_data\\summarySCC_PM25.rds")
SCC <- readRDS("D:\\Data\\data\\pm25\\exdata_data_NEI_data\\Source_Classification_Code.rds")
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
library("data.table")
path <- getwd()
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
, destfile = paste(path, "dataFiles.zip", sep = "/"))
unzip(zipfile = "dataFiles.zip")
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
install.packages("data.table")
library("data.table")
path <- getwd()
download.file(url = "https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip"
, destfile = paste(path, "dataFiles.zip", sep = "/"))
unzip(zipfile = "dataFiles.zip")
SCC <- data.table::as.data.table(x = readRDS(file = "Source_Classification_Code.rds"))
NEI <- data.table::as.data.table(x = readRDS(file = "summarySCC_PM25.rds"))
# Prevents histogram from printing in scientific notation
NEI[, Emissions := lapply(.SD, as.numeric), .SDcols = c("Emissions")]
totalNEI <- NEI[, lapply(.SD, sum, na.rm = TRUE), .SDcols = c("Emissions"), by = year]
barplot(totalNEI[, Emissions]
, names = totalNEI[, year]
, xlab = "Years", ylab = "Emissions"
, main = "Emissions over the Years")
source("D:/Data/data/ExData_Plotting2/Trama2.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama2.R", echo=TRUE)
install.packages("ggplot2")
source("D:/Data/data/ExData_Plotting2/Trama3.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama3.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama4.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama4.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama5.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama5.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama5.R", echo=TRUE)
source("D:/Data/data/ExData_Plotting2/Trama6.R", echo=TRUE)
with(HELPrct, mean(cesd))
dbDisconnect(con)
install.packages("RSQLite")
library("RSQLite")
version
dbDisconnect(con)
ls
capColor<- c(huey= "rojo", duey= "rojo", louie= verde)
capColor<- c(huey= "rojo", duey= "rojo", louie= "verde"")
capColor<- c(huey= "rojo", duey= "rojo", louie= "verde")
L<- list(x = c(1:5), y = c("a", "b","c"), z = capColor)
L[[2]]
L[[[2]]]
L[[1]]
L[[3]]
L[[3,1]]
L$y
L[c(1,3)]
L[c("x", "y")]
L[[3,[1]]]
L[["y"]]
d<- data.frame(x= 1:10, y = latter(1:10), z= LATTER(1:10))
d<- data.frame(x= 1:10, y = letter(1:10), z= LETTER(1:10))
d<- data.frame(x= 1:10, y = letters(1:10), z= LETTERS(1:10))
d<- data.frame(x= 1:10, y = letters(1:10), z= LETTERS(1:10))
d<- data.frame(x= 1:10, y = letters[1:10], z= LETTERS[1:10])
d[1]
re[,1]
d[,1]
d[1,1]
d[, "x", drop= FALSE]
pi/0
NA+1
sum(c(NA, 1, 2))
median(c(NA, 1, 2, 3), na.rm = TRUE)
length(c(NA, 1, 2, 3))
3 == NA
NA == NA
TRUE | NA
length(c(1, 2, NULL, 3))
sum(c(1, 2, NULL, 4))
x<- NULL
C(x, 2)
c(x, 2)
pi/0
2*inf
2*Inf
Inf-1e+10
Inf+Inf
3< Inf
Inf == Inf
0/0
d[c]
d[c("x", "z")]
d[d$x>3, "y", drop= TRUE]
d[d$x>3, "y", drop= FALSE]
d[, "x", drop= FALSE]
d[, "x", drop= TRUE]
n<- rnorm(1)
n
n<- rnorm(2)
n
n<- rnorm(1)
n
ls
ls()
head("x")
head(x)
n
x0
x
?mean
help.search("median")
help.search('median')
help(package= "dplyr")
str(iris)
data("iris")
data(iris)
head(iris)
tail(iris)
getwd
getwd()
setwd("D://Data//Programas_en_R")
getwd()
x3<- rep(1:2, times, each)
?each
?rep
